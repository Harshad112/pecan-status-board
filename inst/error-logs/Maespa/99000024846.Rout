
R version 4.1.3 (2022-03-10) -- "One Push-Up"
Copyright (C) 2022 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> #!/usr/bin/env Rscript
> #-------------------------------------------------------------------------------
> # Copyright (c) 2012 University of Illinois, NCSA.
> # All rights reserved. This program and the accompanying materials
> # are made available under the terms of the
> # University of Illinois/NCSA Open Source License
> # which accompanies this distribution, and is available at
> # http://opensource.ncsa.illinois.edu/license.html
> #-------------------------------------------------------------------------------
> 
> # ----------------------------------------------------------------------
> # Load required libraries
> # ----------------------------------------------------------------------
> library("PEcAn.all")
Loading required package: PEcAn.DB
Loading required package: PEcAn.settings
Loading required package: PEcAn.MA
Loading required package: PEcAn.logger
Loading required package: PEcAn.utils

Attaching package: ‘PEcAn.utils’

The following object is masked from ‘package:utils’:

    download.file

Loading required package: PEcAn.uncertainty
Loading required package: PEcAn.data.atmosphere
Loading required package: PEcAn.data.land
Loading required package: PEcAn.data.remote
Loading required package: PEcAn.assim.batch
Loading required package: PEcAn.emulator
Loading required package: PEcAn.priors
Loading required package: PEcAn.benchmark
Loading required package: PEcAn.remote
Loading required package: PEcAn.workflow
> 
> 
> # --------------------------------------------------
> # get command-line arguments
> args <- get_args()
> 
> # make sure always to call status.end
> options(warn = 1)
> options(error = quote({
+   try(PEcAn.utils::status.end("ERROR"))
+   try(PEcAn.remote::kill.tunnel(settings))
+   if (!interactive()) {
+     q(status = 1)
+   }
+ }))
> 
> # ----------------------------------------------------------------------
> # PEcAn Workflow
> # ----------------------------------------------------------------------
> # Open and read in settings file for PEcAn run.
> settings <- PEcAn.settings::read.settings(args$settings)
2022-11-11 16:59:02 INFO   [PEcAn.settings::read.settings] : 
   Loading inpufile= pecan.xml 
> 
> # Check for additional modules that will require adding settings
> if ("benchmarking" %in% names(settings)) {
+   library(PEcAn.benchmark)
+   settings <- papply(settings, read_settings_BRR)
+ }
> 
> if ("sitegroup" %in% names(settings)) {
+   if (is.null(settings$sitegroup$nSite)) {
+     settings <- PEcAn.settings::createSitegroupMultiSettings(settings,
+       sitegroupId = settings$sitegroup$id
+     )
+   } else {
+     settings <- PEcAn.settings::createSitegroupMultiSettings(
+       settings,
+       sitegroupId = settings$sitegroup$id,
+       nSite = settings$sitegroup$nSite
+     )
+   }
+   # zero out so don't expand a second time if re-reading
+   settings$sitegroup <- NULL
+ }
> 
> # Update/fix/check settings.
> # Will only run the first time it's called, unless force=TRUE
> settings <-
+   PEcAn.settings::prepare.settings(settings, force = FALSE)
2022-11-11 16:59:02 INFO   [fix.deprecated.settings] : 
   Fixing deprecated settings... 
2022-11-11 16:59:02 INFO   [fix.deprecated.settings] : 
   settings$run$dbfiles is deprecated. use settings$database$dbfiles 
   instead 
2022-11-11 16:59:02 INFO   [update.settings] : 
   Fixing deprecated settings... 
2022-11-11 16:59:02 INFO   [check.settings] : Checking settings... 
2022-11-11 16:59:02 INFO   [check.database] : 
   Successfully connected to database : postgres bety bety bety PostgreSQL 
2022-11-11 16:59:02 INFO   [check.database.settings] : 
   Writing all runs/configurations to database. 
2022-11-11 16:59:02 INFO   [check.ensemble.settings] : 
   No start date passed to ensemble - using the run date ( 2004 ). 
2022-11-11 16:59:02 INFO   [check.ensemble.settings] : 
   No end date passed to ensemble - using the run date ( 2004 ). 
2022-11-11 16:59:02 INFO   [fn] : 
   Setting site name to Harvard Forest EMS Tower/HFR1 (US-Ha1) 
2022-11-11 16:59:02 INFO   [fn] : 
   Setting site lat to 42.5378 
2022-11-11 16:59:02 INFO   [fn] : 
   Setting site lon to -72.1715 
2022-11-11 16:59:02 INFO   [check.settings] : 
   Setting meta.analysis threshold to 1.2 
2022-11-11 16:59:02 INFO   [check.settings] : 
   Setting meta.analysis update to only update if no previous meta analysis 
   was found 
2022-11-11 16:59:02 INFO   [check.model.settings] : 
   Setting model type to MAESPA 
2022-11-11 16:59:02 INFO   [check.model.settings] : 
   Setting model revision to git 
2022-11-11 16:59:02 INFO   [check.model.settings] : 
   Option to delete raw model output not set or not logical. Will keep all 
   model output. 
2022-11-11 16:59:03 INFO   [check.model.settings] : 
   Setting model binary to /usr/local/bin/maespa.git 
2022-11-11 16:59:03 INFO   [fn] : path 
2022-11-11 16:59:03 INFO   [fn] : path 
2022-11-11 16:59:03 INFO   [check.workflow.settings] : 
   output folder = /data/workflows/PEcAn_99000024846 
2022-11-11 16:59:03 INFO   [check.settings] : 
   Storing pft broadleaf_evergreen_forest in 
   /data/workflows/PEcAn_99000024846/pft/broadleaf_evergreen_forest 
> 
> # Write pecan.CHECKED.xml
> PEcAn.settings::write.settings(settings, outputfile = "pecan.CHECKED.xml")
[1] "/data/workflows/PEcAn_99000024846/pecan.CHECKED.xml"
> 
> # start from scratch if no continue is passed in
> status_file <- file.path(settings$outdir, "STATUS")
> if (args$continue && file.exists(status_file)) {
+   file.remove(status_file)
+ }
> 
> # Do conversions
> settings <- PEcAn.workflow::do_conversions(settings)
2022-11-11 16:59:03 DEBUG  [PEcAn.workflow::do_conversions] : 
   do.conversion outdir /data/dbfiles 
2022-11-11 16:59:03 INFO   [PEcAn.workflow::do_conversions] : PROCESSING:  met 
2022-11-11 16:59:03 INFO   [PEcAn.workflow::do_conversions] : 
   calling met.process: 
2022-11-11 16:59:03 DEBUG  [read.register] : 
   site 5000000002 AMERIFLUX_BASE_HH text/csv csv 
2022-11-11 16:59:03 DEBUG  [PEcAn.data.atmosphere::met.process] : 
   TRUE TRUE TRUE TRUE FALSE 
2022-11-11 16:59:03 DEBUG  [PEcAn.DB::convert_input] : 
   convert_inputs download.AmerifluxLBL NA localhost 
   /data/dbfiles/AmerifluxLBL_site_0-758 AMERIFLUX_BASE_HH text/csv 758 
   2004-01-01 2004-12-31 
2022-11-11 16:59:03 INFO   [PEcAn.DB::convert_input] : 
   start CHECK convert_inputs download.AmerifluxLBL NA localhost 
   /data/dbfiles/AmerifluxLBL_site_0-758/ AMERIFLUX_BASE_HH text/csv 758 
   2004-01-01 2004-12-31 FALSE FALSE 
2022-11-11 16:59:03 WARN   [dbfile.input.check] : 
   Found possible matching input. Checking if its associate files are on 
   host machine 
     id site_id notes          created_at          updated_at start_date
1 2e+09     758       2017-03-24 11:14:13 2017-03-24 11:14:13 2001-01-01
    end_date                    name parent_id user_id access_level raw
1 2004-12-31 AmerifluxLBL_site_0-758        NA      NA            4  NA
  format_id
1     5e+09
2022-11-11 16:59:03 DEBUG  [PEcAn.DB::convert_input] : 
   File id = 99000006136 File name = AMF_US-Ha1_BASE_HR_18-5 File path = 
   /data/dbfiles/AmerifluxLBL_site_0-758 Input id = 2000000128 10 
2022-11-11 16:59:03 INFO   [PEcAn.DB::convert_input] : 
   end CHECK for existing input record. 
2022-11-11 16:59:03 INFO   [PEcAn.DB::convert_input] : 
   Skipping this input conversion because files are already available. 
2022-11-11 16:59:03 INFO   [.met2cf.module] : 
   Begin change to CF Standards 
2022-11-11 16:59:03 DEBUG  [PEcAn.DB::convert_input] : 
   convert_inputs met2CF.AmerifluxLBL 2000000128 localhost 
   /data/dbfiles/AmerifluxLBL_CF_site_0-758 CF Meteorology 
   application/x-netcdf 758 2004-01-01 2004-12-31 
2022-11-11 16:59:03 INFO   [PEcAn.DB::convert_input] : 
   start CHECK convert_inputs met2CF.AmerifluxLBL 2000000128 localhost 
   /data/dbfiles/AmerifluxLBL_CF_site_0-758/ CF Meteorology 
   application/x-netcdf 758 2004-01-01 2004-12-31 FALSE FALSE 
2022-11-11 16:59:03 WARN   [dbfile.input.check] : 
   Found possible matching input. Checking if its associate files are on 
   host machine 
     id site_id notes          created_at          updated_at start_date
1 2e+09     758       2017-03-24 11:14:21 2017-03-24 11:14:21 2001-01-01
    end_date                       name parent_id user_id access_level raw
1 2004-12-31 AmerifluxLBL_CF_site_0-758     2e+09      NA            4  NA
  format_id
1        33
2022-11-11 16:59:03 DEBUG  [PEcAn.DB::convert_input] : 
   File id = 99000006137 File name = AMF_US-Ha1_BASE_HR_18-5 File path = 
   /data/dbfiles/AmerifluxLBL_CF_site_0-758 Input id = 2000000129 10 
2022-11-11 16:59:03 INFO   [PEcAn.DB::convert_input] : 
   end CHECK for existing input record. 
2022-11-11 16:59:03 INFO   [PEcAn.DB::convert_input] : 
   Skipping this input conversion because files are already available. 
2022-11-11 16:59:03 INFO   [.met2cf.module] : 
   Finished change to CF Standards 
2022-11-11 16:59:03 INFO   [.metgapfill.module] : Gapfilling 
2022-11-11 16:59:03 DEBUG  [PEcAn.DB::convert_input] : 
   convert_inputs metgapfill 2000000129 localhost 
   /data/dbfiles/AmerifluxLBL_CF_gapfill_site_0-758 CF Meteorology 
   application/x-netcdf 758 2004-01-01 2004-12-31 
2022-11-11 16:59:03 INFO   [PEcAn.DB::convert_input] : 
   start CHECK convert_inputs metgapfill 2000000129 localhost 
   /data/dbfiles/AmerifluxLBL_CF_gapfill_site_0-758/ CF Meteorology 
   application/x-netcdf 758 2004-01-01 2004-12-31 FALSE FALSE 
2022-11-11 16:59:03 WARN   [dbfile.input.check] : 
   Found possible matching input. Checking if its associate files are on 
   host machine 
     id site_id notes          created_at          updated_at start_date
1 5e+09     758       2018-09-11 07:50:25 2018-09-11 13:12:19 2004-01-01
    end_date                               name parent_id user_id access_level
1 2004-12-31 AmerifluxLBL_CF_gapfill_site_0-758     2e+09      NA            4
  raw format_id
1  NA        33
2022-11-11 16:59:04 DEBUG  [PEcAn.DB::convert_input] : 
   File id = 99000006138 File name = AMF_US-Ha1_BASE_HR_18-5 File path = 
   /data/dbfiles/AmerifluxLBL_CF_gapfill_site_0-758 Input id = 5000000045 
   10 
2022-11-11 16:59:04 INFO   [PEcAn.DB::convert_input] : 
   end CHECK for existing input record. 
2022-11-11 16:59:04 INFO   [PEcAn.DB::convert_input] : 
   Skipping this input conversion because files are already available. 
$input.id
[1] 5e+09

$dbfile.id
[1] 99000006138

2022-11-11 16:59:04 INFO   [.metgapfill.module] : 
   Finished Gapfilling Met 
2022-11-11 16:59:04 INFO   [.met2model.module] : 
   Begin Model Specific Conversion 
[1] "Convert to model format"
2022-11-11 16:59:04 DEBUG  [PEcAn.DB::convert_input] : 
   convert_inputs met2model.MAESPA 5000000045 localhost 
   /data/dbfiles/AmerifluxLBL_MAESPA_site_0-758 maespa.met text/plain 758 
   2004-01-01 2004-12-31 
2022-11-11 16:59:04 INFO   [PEcAn.DB::convert_input] : 
   start CHECK convert_inputs met2model.MAESPA 5000000045 localhost 
   /data/dbfiles/AmerifluxLBL_MAESPA_site_0-758/ maespa.met text/plain 758 
   2004-01-01 2004-12-31 FALSE FALSE 
2022-11-11 16:59:04 WARN   [dbfile.input.check] : 
   Found possible matching input. Checking if its associate files are on 
   host machine 
       id site_id notes          created_at          updated_at start_date
1 9.9e+10     758       2022-07-29 14:20:56 2022-07-29 14:20:56 2004-01-01
    end_date                           name parent_id user_id access_level raw
1 2004-12-31 AmerifluxLBL_MAESPA_site_0-758     5e+09      NA            4  NA
  format_id
1     1e+09
2022-11-11 16:59:04 DEBUG  [PEcAn.DB::convert_input] : 
   File id = 99000007191 File name = 
   AMF_US-Ha1_BASE_HR_18-5.2004-01-01.2004-12-31.dat File path = 
   /data/dbfiles/AmerifluxLBL_MAESPA_site_0-758 Input id = 99000000042 10 
2022-11-11 16:59:04 INFO   [PEcAn.DB::convert_input] : 
   end CHECK for existing input record. 
2022-11-11 16:59:04 INFO   [PEcAn.DB::convert_input] : 
   Skipping this input conversion because files are already available. 
2022-11-11 16:59:04 INFO   [.met2model.module] : 
   Finished Model Specific Conversion 99000000042 
2022-11-11 16:59:04 DEBUG  [PEcAn.workflow::do_conversions] : 
   updated met path: 
   /data/dbfiles/AmerifluxLBL_MAESPA_site_0-758/AMF_US-Ha1_BASE_HR_18-5.2004-01-01.2004-12-31.dat 
> 
> # Query the trait database for data and priors
> if (PEcAn.utils::status.check("TRAIT") == 0) {
+   PEcAn.utils::status.start("TRAIT")
+   settings <- PEcAn.workflow::runModule.get.trait.data(settings)
+   PEcAn.settings::write.settings(settings,
+     outputfile = "pecan.TRAIT.xml"
+   )
+   PEcAn.utils::status.end()
+ } else if (file.exists(file.path(settings$outdir, "pecan.TRAIT.xml"))) {
+   settings <- PEcAn.settings::read.settings(file.path(settings$outdir, "pecan.TRAIT.xml"))
+ }
2022-11-11 16:59:04 DEBUG  [PEcAn.DB::get.trait.data] : 
   `trait.names` is NULL, so retrieving all traits that have at least one 
   prior for these PFTs. 
2022-11-11 16:59:04 DEBUG  [FUN] : 
   All posterior files are present. Performing additional checks to 
   determine if meta-analysis needs to be updated. 
2022-11-11 16:59:04 DEBUG  [FUN] : 
   Checking if PFT membership has changed. 
2022-11-11 16:59:04 DEBUG  [FUN] : 
   Checking if priors have changed 
2022-11-11 16:59:04 DEBUG  [FUN] : 
   Checking if trait data have changed 
2022-11-11 16:59:04 WARN   [FUN] : 
   New and existing trait data are both empty. Skipping this check. 
2022-11-11 16:59:04 INFO   [FUN] : 
   Reusing existing files from posterior 99000001972 for PFT 
   'broadleaf_evergreen_forest' 
2022-11-11 16:59:04 ERROR  [FUN] : 
   No previous posterior distribution file found.  Most likely, trait data 
   were retrieved, but meta-analysis was not run. Meta-analysis will be 
   run. 
2022-11-11 16:59:04 WARN   [FUN] : 
   None of the requested traits were found for PFT 521 
2022-11-11 16:59:04 INFO   [FUN] : 
 Summary of prior distributions for PFT  'broadleaf_evergreen_forest' :
         distn parama paramb  n
Jmax  weibull      2    260 NA
Vcmax    unif      0    500  0 
2022-11-11 16:59:04 DEBUG  [FUN] : The following posterior files found in PFT outdir  ( '/data/workflows/PEcAn_99000024846/pft/broadleaf_evergreen_forest' ) will be registered in BETY  under posterior ID  99000001973 :   .  The following files (if any) will not be registered because they already existed:   
> 
> 
> # Run the PEcAn meta.analysis
> if (!is.null(settings$meta.analysis)) {
+   if (PEcAn.utils::status.check("META") == 0) {
+     PEcAn.utils::status.start("META")
+     PEcAn.MA::runModule.run.meta.analysis(settings)
+     PEcAn.utils::status.end()
+   }
+ }
2022-11-11 16:59:04 INFO   [FUN] : 
   ------------------------------------------------------------------- 
2022-11-11 16:59:04 INFO   [FUN] : 
   Running meta.analysis for PFT: broadleaf_evergreen_forest 
2022-11-11 16:59:04 INFO   [FUN] : 
   ------------------------------------------------------------------- 
2022-11-11 16:59:04 INFO   [FUN] : 
   no trait data for PFT broadleaf_evergreen_forest so no meta-analysis 
   will be performed 
> 
> # Write model specific configs
> if (PEcAn.utils::status.check("CONFIG") == 0) {
+   PEcAn.utils::status.start("CONFIG")
+   settings <-
+     PEcAn.workflow::runModule.run.write.configs(settings)
+   PEcAn.settings::write.settings(settings, outputfile = "pecan.CONFIGS.xml")
+   PEcAn.utils::status.end()
+ } else if (file.exists(file.path(settings$outdir, "pecan.CONFIGS.xml"))) {
+   settings <- PEcAn.settings::read.settings(file.path(settings$outdir, "pecan.CONFIGS.xml"))
+ }
2022-11-11 16:59:04 INFO   [PEcAn.uncertainty::get.parameter.samples] : 
   Selected PFT(s): broadleaf_evergreen_forest 
Warning in rm(prior.distns, post.distns, trait.mcmc) :
  object 'prior.distns' not found
Warning in rm(prior.distns, post.distns, trait.mcmc) :
  object 'post.distns' not found
Warning in rm(prior.distns, post.distns, trait.mcmc) :
  object 'trait.mcmc' not found
2022-11-11 16:59:04 INFO   [PEcAn.uncertainty::get.parameter.samples] : 
   No trait.mcmc file is associated with this posterior ID. 
2022-11-11 16:59:04 INFO   [PEcAn.uncertainty::get.parameter.samples] : 
   No MCMC results for PFT broadleaf_evergreen_forest 
2022-11-11 16:59:04 INFO   [PEcAn.uncertainty::get.parameter.samples] : 
   PFT broadleaf_evergreen_forest will use prior distributions for Jmax 
   Vcmax 
2022-11-11 16:59:04 INFO   [PEcAn.uncertainty::get.parameter.samples] : 
   using 20000 samples per trait 
Loading required package: PEcAn.MAESPA
Loading required package: Maeswrap
Loading required package: rgl
Warning: 'rgl.init' failed, running with 'rgl.useNULL = TRUE'.
Loading required package: lattice
Loading required package: geometry
Loading required package: stringr
Loading required package: tools
2022-11-11 16:59:05 INFO   [PEcAn.workflow::run.write.configs] : 
   ###### Finished writing model run config files ##### 
2022-11-11 16:59:05 INFO   [PEcAn.workflow::run.write.configs] : 
   config files samples in /data/workflows/PEcAn_99000024846/run 
2022-11-11 16:59:05 INFO   [PEcAn.workflow::run.write.configs] : 
   parameter values for runs in 
   /data/workflows/PEcAn_99000024846/samples.RData 
> 
> if ((length(which(commandArgs() == "--advanced")) != 0)
+ && (PEcAn.utils::status.check("ADVANCED") == 0)) {
+   PEcAn.utils::status.start("ADVANCED")
+   q()
+ }
> 
> # Start ecosystem model runs
> if (PEcAn.utils::status.check("MODEL") == 0) {
+   PEcAn.utils::status.start("MODEL")
+   stop_on_error <- as.logical(settings[[c("run", "stop_on_error")]])
+   if (length(stop_on_error) == 0) {
+     # If we're doing an ensemble run, don't stop. If only a single run, we
+     # should be stopping.
+     if (is.null(settings[["ensemble"]]) ||
+           as.numeric(settings[[c("ensemble", "size")]]) == 1) {
+       stop_on_error <- TRUE
+     } else {
+       stop_on_error <- FALSE
+     }
+   }
+   PEcAn.workflow::runModule_start_model_runs(settings, stop.on.error = stop_on_error)
+   PEcAn.utils::status.end()
+ }
2022-11-11 16:59:05 INFO   [start_model_runs] : 
   ------------------------------------------------------------------- 
2022-11-11 16:59:05 INFO   [start_model_runs] : 
   Starting model runs MAESPA 
2022-11-11 16:59:05 INFO   [start_model_runs] : 
   ------------------------------------------------------------------- 
  |                                                                              |                                                                      |   0%2022-11-11 16:59:05 DEBUG  [start_model_runs] : 
   JOB.SH submit status: TRUE 

2022-11-11 16:59:05 DEBUG  [start_model_runs] : 
   Waiting for the following jobs: 
   /data/workflows/PEcAn_99000024846/run/99000016300 
  |                                                                              |======================================================================| 100%> 
> # Get results of model runs
> if (PEcAn.utils::status.check("OUTPUT") == 0) {
+   PEcAn.utils::status.start("OUTPUT")
+   runModule.get.results(settings)
+   PEcAn.utils::status.end()
+ }
2022-11-11 16:59:15 WARN   [get.results] : 
   Currently performing ensemble analysis on variable NPP) 
2022-11-11 16:59:15 INFO   [PEcAn.uncertainty::read.ensemble.output] : 
   reading ensemble output from run id: 99000016300 
2022-11-11 16:59:15 WARN   [PEcAn.utils::read.output] : 
   read.output: no netCDF files of model output present for runid = 
   99000016300 in /data/workflows/PEcAn_99000024846/out/99000016300 for 
   years 2004 : 2004 . Returning NA. 
2022-11-11 16:59:15 INFO   [PEcAn.utils::read.output] : 
   No files found. Returning all NA. 
Warning in mean.default(out, na.rm = TRUE) :
  argument is not numeric or logical: returning NA
> 
> # Run ensemble analysis on model output.
> if ("ensemble" %in% names(settings)
+ && PEcAn.utils::status.check("ENSEMBLE") == 0) {
+   PEcAn.utils::status.start("ENSEMBLE")
+   runModule.run.ensemble.analysis(settings, TRUE)
+   PEcAn.utils::status.end()
+ }
2022-11-11 16:59:15 WARN   [run.ensemble.analysis] : 
   Currently performing ensemble analysis on variable NPP 
[1] "----- Variable: NPP"
2022-11-11 16:59:15 WARN   [run.ensemble.analysis] : 
   no data in ensemble.output 
> 
> # Run sensitivity analysis and variance decomposition on model output
> if ("sensitivity.analysis" %in% names(settings)
+ && PEcAn.utils::status.check("SENSITIVITY") == 0) {
+   PEcAn.utils::status.start("SENSITIVITY")
+   runModule.run.sensitivity.analysis(settings)
+   PEcAn.utils::status.end()
+ }
> 
> # Run parameter data assimilation
> if ("assim.batch" %in% names(settings)) {
+   if (PEcAn.utils::status.check("PDA") == 0) {
+     PEcAn.utils::status.start("PDA")
+     settings <-
+       PEcAn.assim.batch::runModule.assim.batch(settings)
+     PEcAn.utils::status.end()
+   }
+ }
> 
> # Run state data assimilation
> if ("state.data.assimilation" %in% names(settings)) {
+   if (PEcAn.utils::status.check("SDA") == 0) {
+     PEcAn.utils::status.start("SDA")
+     settings <- sda.enfk(settings)
+     PEcAn.utils::status.end()
+   }
+ }
> 
> # Run benchmarking
> if ("benchmarking" %in% names(settings)
+ && "benchmark" %in% names(settings$benchmarking)) {
+   PEcAn.utils::status.start("BENCHMARKING")
+   results <-
+     papply(settings, function(x) {
+       calc_benchmark(x, bety)
+     })
+   PEcAn.utils::status.end()
+ }
> 
> # Pecan workflow complete
> if (PEcAn.utils::status.check("FINISHED") == 0) {
+   PEcAn.utils::status.start("FINISHED")
+   PEcAn.remote::kill.tunnel(settings)
+   db.query(
+     paste(
+       "UPDATE workflows SET finished_at=NOW() WHERE id=",
+       settings$workflow$id,
+       "AND finished_at IS NULL"
+     ),
+     params = settings$database$bety
+   )
+ 
+   # Send email if configured
+   if (!is.null(settings$email)
+   && !is.null(settings$email$to)
+   && (settings$email$to != "")) {
+     sendmail(
+       settings$email$from,
+       settings$email$to,
+       paste0("Workflow has finished executing at ", base::date()),
+       paste0("You can find the results on ", settings$email$url)
+     )
+   }
+   PEcAn.utils::status.end()
+ }
> 
> db.print.connections()
2022-11-11 16:59:15 INFO   [db.print.connections] : 
   Created 13 connections and executed 109 queries 
2022-11-11 16:59:15 INFO   [db.print.connections] : 
   Created 13 connections and executed 109 queries 
2022-11-11 16:59:15 DEBUG  [db.print.connections] : 
   No open database connections. 
> print("---------- PEcAn Workflow Complete ----------")
[1] "---------- PEcAn Workflow Complete ----------"
> 
> proc.time()
   user  system elapsed 
  4.029   0.496  15.002 
